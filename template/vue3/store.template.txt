import {UnwrapNestedRefs} from "@vue/reactivity";
import {reactive} from "vue";

export const observableObject = <T extends object>(obj : T) => {
	return reactive<T>(obj as T);
}

export class Store<T extends object> {

	public state: UnwrapNestedRefs<T> = observableObject<T>({} as T);

	constructor() {
		const initialState = this.initialState();

		if(!initialState) {
			return;
		}

		this.state = observableObject<T>(initialState);
	}

	public initialState(): T {
//		return {} as T;
		return null;
	}
}
